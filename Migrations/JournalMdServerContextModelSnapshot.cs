// <auto-generated />
using System;
using JournalMdServer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JournalMdServer.Migrations
{
    [DbContext(typeof(JournalMdServerContext))]
    partial class JournalMdServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("JournalMdServer.Models.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("ParentCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "weekday",
                            Title = "Weekday"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "weekday_monday",
                            ParentCategoryId = 1L,
                            Title = "Monday"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "weekday_tuesday",
                            ParentCategoryId = 1L,
                            Title = "Tuesday"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "weekday_wednesday",
                            ParentCategoryId = 1L,
                            Title = "Wednesday"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "weekday_thursday",
                            ParentCategoryId = 1L,
                            Title = "Thursday"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "weekday_friday",
                            ParentCategoryId = 1L,
                            Title = "Friday"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "weekday_saturday",
                            ParentCategoryId = 1L,
                            Title = "Saturday"
                        },
                        new
                        {
                            Id = 8L,
                            Name = "weekday_sunday",
                            ParentCategoryId = 1L,
                            Title = "Sunday"
                        },
                        new
                        {
                            Id = 9L,
                            Name = "time",
                            Title = "Time"
                        },
                        new
                        {
                            Id = 10L,
                            Name = "time_today",
                            ParentCategoryId = 9L,
                            Title = "Today"
                        },
                        new
                        {
                            Id = 11L,
                            Name = "time_week",
                            ParentCategoryId = 9L,
                            Title = "Week"
                        },
                        new
                        {
                            Id = 12L,
                            Name = "time_month",
                            ParentCategoryId = 9L,
                            Title = "Month"
                        },
                        new
                        {
                            Id = 13L,
                            Name = "time_year",
                            ParentCategoryId = 9L,
                            Title = "Year"
                        },
                        new
                        {
                            Id = 14L,
                            Name = "time_life",
                            ParentCategoryId = 9L,
                            Title = "Life"
                        },
                        new
                        {
                            Id = 15L,
                            Name = "category",
                            Title = "Category"
                        },
                        new
                        {
                            Id = 16L,
                            Name = "category_quote",
                            ParentCategoryId = 15L,
                            Title = "Quote"
                        },
                        new
                        {
                            Id = 17L,
                            Name = "category_shoppinglist",
                            ParentCategoryId = 15L,
                            Title = "Shopping List"
                        },
                        new
                        {
                            Id = 18L,
                            Name = "activity",
                            Title = "Activity"
                        },
                        new
                        {
                            Id = 19L,
                            Name = "activity_weighttraining",
                            ParentCategoryId = 18L,
                            Title = "Weight training"
                        },
                        new
                        {
                            Id = 20L,
                            Name = "activity_running",
                            ParentCategoryId = 18L,
                            Title = "Running"
                        },
                        new
                        {
                            Id = 21L,
                            Name = "activity_dancing",
                            ParentCategoryId = 18L,
                            Title = "Dancing"
                        });
                });

            modelBuilder.Entity("JournalMdServer.Models.Note", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("CreatedById")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("Mood")
                        .HasColumnType("INTEGER");

                    b.Property<long>("NoteTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NoteTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(3190),
                            CreatedById = 1L,
                            Date = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(2557),
                            Description = @"**Test** Description

# Test Header",
                            Mood = 5,
                            NoteTypeId = 1L,
                            Title = "Test Journal",
                            UpdatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(3205),
                            UpdatedById = 1L,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(3296),
                            CreatedById = 1L,
                            Date = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(3284),
                            Description = "Test",
                            Mood = 1,
                            NoteTypeId = 3L,
                            Title = "Test Task",
                            UpdatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(3300),
                            UpdatedById = 1L,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(3310),
                            CreatedById = 1L,
                            Date = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(3306),
                            Description = "Test",
                            Mood = 3,
                            NoteTypeId = 8L,
                            Title = "Test Weight Measurement",
                            UpdatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(3314),
                            UpdatedById = 1L,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(3323),
                            CreatedById = 2L,
                            Date = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(3319),
                            Description = @"**Test** Description

# Test Header",
                            Mood = 3,
                            NoteTypeId = 1L,
                            Title = "Test Journal",
                            UpdatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(3326),
                            UpdatedById = 2L,
                            UserId = 2L
                        });
                });

            modelBuilder.Entity("JournalMdServer.Models.NoteCategory", b =>
                {
                    b.Property<long>("NoteId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("NoteId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("NoteCategory");
                });

            modelBuilder.Entity("JournalMdServer.Models.NoteField", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("NoteTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Required")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rules")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NoteTypeId");

                    b.ToTable("NoteFields");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "Is it done?",
                            Name = "completed",
                            NoteTypeId = 3L,
                            Order = 1,
                            Required = false,
                            Rules = "",
                            Title = "Completed",
                            Type = "boolean"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "When is it due?",
                            Name = "due",
                            NoteTypeId = 3L,
                            Order = 2,
                            Required = false,
                            Rules = "",
                            Title = "Due",
                            Type = "datetime"
                        },
                        new
                        {
                            Id = 3L,
                            Description = "Did you make it?",
                            Name = "achieved",
                            NoteTypeId = 4L,
                            Order = 1,
                            Required = false,
                            Rules = "",
                            Title = "Completed",
                            Type = "boolean"
                        },
                        new
                        {
                            Id = 4L,
                            Description = "When is it due?",
                            Name = "due",
                            NoteTypeId = 4L,
                            Order = 2,
                            Required = false,
                            Rules = "",
                            Title = "Due",
                            Type = "datetime"
                        },
                        new
                        {
                            Id = 5L,
                            Description = "Your weight in kg.",
                            Name = "weight",
                            NoteTypeId = 8L,
                            Order = 1,
                            Required = true,
                            Rules = "",
                            Title = "Weight",
                            Type = "number"
                        },
                        new
                        {
                            Id = 6L,
                            Description = "Your height in cm.",
                            Name = "height",
                            NoteTypeId = 8L,
                            Order = 2,
                            Required = true,
                            Rules = "default=previous",
                            Title = "Height",
                            Type = "number"
                        },
                        new
                        {
                            Id = 7L,
                            Description = "",
                            Name = "goalweight",
                            NoteTypeId = 8L,
                            Order = 3,
                            Required = false,
                            Rules = "default=previous",
                            Title = "Goal Weight",
                            Type = "number"
                        },
                        new
                        {
                            Id = 8L,
                            Description = "",
                            Name = "bodymassindex",
                            NoteTypeId = 8L,
                            Order = 4,
                            Required = false,
                            Rules = "calculation=bodymassindex",
                            Title = "Body-Mass-Index",
                            Type = "calculated"
                        },
                        new
                        {
                            Id = 9L,
                            Description = "",
                            Name = "ponderalindex",
                            NoteTypeId = 8L,
                            Order = 5,
                            Required = false,
                            Rules = "calculation=ponderalindex",
                            Title = "Ponderal-Index",
                            Type = "calculated"
                        },
                        new
                        {
                            Id = 10L,
                            Description = "For Waist-To-Hip Ratio.",
                            Name = "waist",
                            NoteTypeId = 9L,
                            Order = 2,
                            Required = true,
                            Rules = "",
                            Title = "Waist",
                            Type = "number"
                        },
                        new
                        {
                            Id = 11L,
                            Description = "For Waist-To-Hip Ratio.",
                            Name = "hips",
                            NoteTypeId = 9L,
                            Order = 3,
                            Required = true,
                            Rules = "",
                            Title = "Hips",
                            Type = "number"
                        },
                        new
                        {
                            Id = 12L,
                            Description = "",
                            Name = "chest",
                            NoteTypeId = 9L,
                            Order = 1,
                            Required = false,
                            Rules = "",
                            Title = "Chest",
                            Type = "number"
                        },
                        new
                        {
                            Id = 13L,
                            Description = "Biceps",
                            Name = "arml",
                            NoteTypeId = 9L,
                            Order = 4,
                            Required = false,
                            Rules = "",
                            Title = "Arm Left",
                            Type = "number"
                        },
                        new
                        {
                            Id = 14L,
                            Description = "Biceps",
                            Name = "armr",
                            NoteTypeId = 9L,
                            Order = 4,
                            Required = false,
                            Rules = "",
                            Title = "Arm Right",
                            Type = "number"
                        },
                        new
                        {
                            Id = 15L,
                            Description = "Hamstrings/quadriceps",
                            Name = "legl",
                            NoteTypeId = 9L,
                            Order = 5,
                            Required = false,
                            Rules = "",
                            Title = "Leg Left",
                            Type = "number"
                        },
                        new
                        {
                            Id = 16L,
                            Description = "Hamstrings/quadriceps",
                            Name = "legr",
                            NoteTypeId = 9L,
                            Order = 5,
                            Required = false,
                            Rules = "",
                            Title = "Leg Right",
                            Type = "number"
                        },
                        new
                        {
                            Id = 17L,
                            Description = "Calf",
                            Name = "calfl",
                            NoteTypeId = 9L,
                            Order = 6,
                            Required = false,
                            Rules = "",
                            Title = "Calf Left",
                            Type = "number"
                        },
                        new
                        {
                            Id = 18L,
                            Description = "Calf",
                            Name = "calfr",
                            NoteTypeId = 9L,
                            Order = 6,
                            Required = false,
                            Rules = "",
                            Title = "Calf Right",
                            Type = "number"
                        },
                        new
                        {
                            Id = 19L,
                            Description = "",
                            Name = "bodyfatmass",
                            NoteTypeId = 9L,
                            Order = 7,
                            Required = false,
                            Rules = "",
                            Title = "Body-Fat-Mass",
                            Type = "number"
                        },
                        new
                        {
                            Id = 20L,
                            Description = "",
                            Name = "bodyfatpercentage",
                            NoteTypeId = 9L,
                            Order = 8,
                            Required = false,
                            Rules = "",
                            Title = "Body-Fat-Percentage",
                            Type = "number"
                        },
                        new
                        {
                            Id = 21L,
                            Description = "",
                            Name = "totalbodywater",
                            NoteTypeId = 9L,
                            Order = 9,
                            Required = false,
                            Rules = "",
                            Title = "Total-Body-Water",
                            Type = "number"
                        },
                        new
                        {
                            Id = 22L,
                            Description = "",
                            Name = "musclemass",
                            NoteTypeId = 9L,
                            Order = 10,
                            Required = false,
                            Rules = "",
                            Title = "Muscle-Mass",
                            Type = "number"
                        },
                        new
                        {
                            Id = 23L,
                            Description = "",
                            Name = "waisttohipratio",
                            NoteTypeId = 9L,
                            Order = 11,
                            Required = false,
                            Rules = "calculation=waisttohipratio",
                            Title = "Waist-To-Hip-Ratio",
                            Type = "calculated"
                        },
                        new
                        {
                            Id = 24L,
                            Description = "Is it done?",
                            Name = "completed",
                            NoteTypeId = 10L,
                            Order = 1,
                            Required = false,
                            Rules = "calculation=completed",
                            Title = "Completed",
                            Type = "calculated"
                        },
                        new
                        {
                            Id = 25L,
                            Description = "When is it due?",
                            Name = "due",
                            NoteTypeId = 10L,
                            Order = 2,
                            Required = false,
                            Rules = "",
                            Title = "Due",
                            Type = "datetime"
                        });
                });

            modelBuilder.Entity("JournalMdServer.Models.NoteTag", b =>
                {
                    b.Property<long>("NoteId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("NoteId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("NoteTag");
                });

            modelBuilder.Entity("JournalMdServer.Models.NoteType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("NoteDescriptionShort")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("NoteTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "Summarize your day or write down your thoughts.",
                            Name = "journal",
                            NoteDescriptionShort = false,
                            Order = 1,
                            Title = "Journal"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "Write a simple note.",
                            Name = "note",
                            NoteDescriptionShort = false,
                            Order = 2,
                            Title = "Note"
                        },
                        new
                        {
                            Id = 3L,
                            Description = "A task you must complete.",
                            Name = "task",
                            NoteDescriptionShort = false,
                            Order = 3,
                            Title = "Task"
                        },
                        new
                        {
                            Id = 4L,
                            Description = "A goal you want to achieve.",
                            Name = "goal",
                            NoteDescriptionShort = false,
                            Order = 5,
                            Title = "Goal"
                        },
                        new
                        {
                            Id = 5L,
                            Description = "Something you've done.",
                            Name = "activity",
                            NoteDescriptionShort = false,
                            Order = 6,
                            Title = "Activity"
                        },
                        new
                        {
                            Id = 6L,
                            Description = "Record your habits.",
                            Name = "habit",
                            NoteDescriptionShort = false,
                            Order = 7,
                            Title = "Habit"
                        },
                        new
                        {
                            Id = 7L,
                            Description = "Write down what you want to do every day.",
                            Name = "routine",
                            NoteDescriptionShort = false,
                            Order = 8,
                            Title = "Routine"
                        },
                        new
                        {
                            Id = 8L,
                            Description = "Track your weight.",
                            Name = "weightmeasurement",
                            NoteDescriptionShort = true,
                            Order = 9,
                            Title = "Weight Measurement"
                        },
                        new
                        {
                            Id = 9L,
                            Description = "Track your body measurements.",
                            Name = "bodymeasurement",
                            NoteDescriptionShort = true,
                            Order = 10,
                            Title = "Body Measurement"
                        },
                        new
                        {
                            Id = 10L,
                            Description = "List of tasks.",
                            Name = "project",
                            NoteDescriptionShort = false,
                            Order = 4,
                            Title = "Project"
                        });
                });

            modelBuilder.Entity("JournalMdServer.Models.NoteValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("CreatedById")
                        .HasColumnType("INTEGER");

                    b.Property<long>("NoteFieldId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("NoteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NoteFieldId");

                    b.HasIndex("NoteId");

                    b.HasIndex("UserId");

                    b.ToTable("NoteValue");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(5691),
                            CreatedById = 1L,
                            NoteFieldId = 1L,
                            NoteId = 2L,
                            UpdatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(5710),
                            UpdatedById = 1L,
                            UserId = 1L,
                            Value = "false"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(5760),
                            CreatedById = 1L,
                            NoteFieldId = 2L,
                            NoteId = 2L,
                            UpdatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(5765),
                            UpdatedById = 1L,
                            UserId = 1L,
                            Value = "2022-10-01"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(5770),
                            CreatedById = 1L,
                            NoteFieldId = 5L,
                            NoteId = 3L,
                            UpdatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(5774),
                            UpdatedById = 1L,
                            UserId = 1L,
                            Value = "80"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(5779),
                            CreatedById = 1L,
                            NoteFieldId = 6L,
                            NoteId = 3L,
                            UpdatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(5783),
                            UpdatedById = 1L,
                            UserId = 1L,
                            Value = "180"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(5787),
                            CreatedById = 1L,
                            NoteFieldId = 7L,
                            NoteId = 3L,
                            UpdatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(5791),
                            UpdatedById = 1L,
                            UserId = 1L,
                            Value = "78"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(5796),
                            CreatedById = 1L,
                            NoteFieldId = 8L,
                            NoteId = 3L,
                            UpdatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(5800),
                            UpdatedById = 1L,
                            UserId = 1L,
                            Value = "24,69"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(5805),
                            CreatedById = 1L,
                            NoteFieldId = 9L,
                            NoteId = 3L,
                            UpdatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 203, DateTimeKind.Local).AddTicks(5809),
                            UpdatedById = 1L,
                            UserId = 1L,
                            Value = "13,72"
                        });
                });

            modelBuilder.Entity("JournalMdServer.Models.Tag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("CreatedById")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<long>("UpdatedById")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 200, DateTimeKind.Local).AddTicks(1227),
                            CreatedById = 1L,
                            Name = "happy",
                            Title = "Happy",
                            UpdatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 202, DateTimeKind.Local).AddTicks(8642),
                            UpdatedById = 1L,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 202, DateTimeKind.Local).AddTicks(9376),
                            CreatedById = 2L,
                            Name = "fun",
                            Title = "Fun",
                            UpdatedAt = new DateTime(2020, 7, 18, 13, 13, 12, 202, DateTimeKind.Local).AddTicks(9399),
                            UpdatedById = 2L,
                            UserId = 2L
                        });
                });

            modelBuilder.Entity("JournalMdServer.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Token")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FirstName = "Max",
                            LastName = "Power",
                            PasswordHash = new byte[] { 223, 233, 254, 207, 22, 246, 226, 106, 163, 18, 242, 106, 130, 134, 221, 53, 31, 98, 13, 6, 203, 189, 175, 218, 238, 202, 156, 193, 14, 124, 139, 158, 109, 193, 205, 90, 50, 102, 153, 189, 14, 68, 92, 87, 131, 202, 159, 116, 187, 111, 170, 59, 68, 135, 16, 176, 231, 189, 4, 188, 33, 207, 186, 244 },
                            PasswordSalt = new byte[] { 77, 107, 53, 3, 195, 35, 231, 43, 121, 10, 66, 220, 100, 241, 191, 154, 8, 102, 225, 67, 218, 59, 248, 243, 81, 154, 96, 122, 133, 97, 202, 59, 236, 102, 162, 191, 121, 50, 146, 5, 88, 232, 131, 188, 4, 215, 180, 216, 183, 93, 151, 35, 205, 16, 136, 137, 175, 42, 127, 227, 150, 122, 134, 53, 119, 79, 108, 171, 32, 29, 184, 175, 189, 117, 67, 255, 149, 1, 94, 113, 240, 184, 92, 172, 216, 100, 157, 11, 214, 52, 145, 116, 19, 102, 145, 137, 86, 54, 105, 111, 78, 81, 223, 149, 222, 82, 43, 81, 249, 172, 86, 83, 146, 171, 123, 154, 113, 11, 130, 88, 240, 106, 70, 167, 185, 81, 179, 246 },
                            Username = "1"
                        },
                        new
                        {
                            Id = 2L,
                            PasswordHash = new byte[] { 223, 233, 254, 207, 22, 246, 226, 106, 163, 18, 242, 106, 130, 134, 221, 53, 31, 98, 13, 6, 203, 189, 175, 218, 238, 202, 156, 193, 14, 124, 139, 158, 109, 193, 205, 90, 50, 102, 153, 189, 14, 68, 92, 87, 131, 202, 159, 116, 187, 111, 170, 59, 68, 135, 16, 176, 231, 189, 4, 188, 33, 207, 186, 244 },
                            PasswordSalt = new byte[] { 77, 107, 53, 3, 195, 35, 231, 43, 121, 10, 66, 220, 100, 241, 191, 154, 8, 102, 225, 67, 218, 59, 248, 243, 81, 154, 96, 122, 133, 97, 202, 59, 236, 102, 162, 191, 121, 50, 146, 5, 88, 232, 131, 188, 4, 215, 180, 216, 183, 93, 151, 35, 205, 16, 136, 137, 175, 42, 127, 227, 150, 122, 134, 53, 119, 79, 108, 171, 32, 29, 184, 175, 189, 117, 67, 255, 149, 1, 94, 113, 240, 184, 92, 172, 216, 100, 157, 11, 214, 52, 145, 116, 19, 102, 145, 137, 86, 54, 105, 111, 78, 81, 223, 149, 222, 82, 43, 81, 249, 172, 86, 83, 146, 171, 123, 154, 113, 11, 130, 88, 240, 106, 70, 167, 185, 81, 179, 246 },
                            Username = "2"
                        });
                });

            modelBuilder.Entity("JournalMdServer.Models.Category", b =>
                {
                    b.HasOne("JournalMdServer.Models.Category", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryId");
                });

            modelBuilder.Entity("JournalMdServer.Models.Note", b =>
                {
                    b.HasOne("JournalMdServer.Models.NoteType", "NoteType")
                        .WithMany()
                        .HasForeignKey("NoteTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JournalMdServer.Models.User", "User")
                        .WithMany("Notes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JournalMdServer.Models.NoteCategory", b =>
                {
                    b.HasOne("JournalMdServer.Models.Category", "Category")
                        .WithMany("NoteCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JournalMdServer.Models.Note", "Note")
                        .WithMany("NoteCategories")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JournalMdServer.Models.NoteField", b =>
                {
                    b.HasOne("JournalMdServer.Models.NoteType", "NoteType")
                        .WithMany("NoteFields")
                        .HasForeignKey("NoteTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JournalMdServer.Models.NoteTag", b =>
                {
                    b.HasOne("JournalMdServer.Models.Note", "Note")
                        .WithMany("NoteTags")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JournalMdServer.Models.Tag", "Tag")
                        .WithMany("NoteTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JournalMdServer.Models.NoteValue", b =>
                {
                    b.HasOne("JournalMdServer.Models.NoteField", "NoteField")
                        .WithMany()
                        .HasForeignKey("NoteFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JournalMdServer.Models.Note", "Note")
                        .WithMany("NoteValues")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JournalMdServer.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JournalMdServer.Models.Tag", b =>
                {
                    b.HasOne("JournalMdServer.Models.User", "User")
                        .WithMany("Tags")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
